#include "LedControl.h"  //引用 LedControl 程式庫
LedControl lc1=LedControl(12,11,10,8);
LedControl lc2=LedControl(9,8,7,8);//宣告 LedControl 物件
byte a[8]={B00000000,B00000000,B11111111,B00001001,B10001001,B10101001,B11001001,B10001001};
byte b[8]={B10001001,B10001001,B10001001,B11001001,B10101001,B10001001,B00001111,B00000000};
byte c[8]={B00000010,B00000010,B11111010,B01001010,B01001010,B01001010,B01001010,B11111111};
byte d[8]={B01001010,B01001010,B01001010,B01001010,B11111010,B00000010,B00000010,B00000000};
byte e[8]={B00010000,B00010010,B10010010,B11111110,B01010001,B10010001,B00000000,B00100010};
byte f[8]={B01000100,B10011000,B00010000,B00000000,B11111111,B00000000,B00000000,B00000000};
byte g[8]={B00000000,B00000000,B11111111,B01001001,B01001001,B01001001,B11101001,B01001001};
byte h[8]={B01001001,B01001001,B01001001,B01001001,B11101001,B01001001,B01001001,B00001111};
byte i[8]={B11000000,B00110000,B00001111,B00001000,B10001000,B01001000,B00111111,B00001000};
byte j[8]={B00001000,B00001000,B00001000,B11111111,B00001000,B00001000,B00001000,B00000000};
byte k[8]={B00000000,B00000000,B01000011,B00100010,B00010010,B00001010,B01000110,B11111111};
byte l[8]={B00000110,B00001010,B00010010,B00100010,B01000011,B01000000,B00000000,B00000000};
byte m[8]={B00000010,B00000001,B00000000,B11111111,B00000000,B00000001,B00001000,B00001000};
byte n[8]={B00001000,B00001001,B00000101,B00000100,B11111111,B00000100,B00000100,B00000000};
byte o[8]={B11000000,B00110000,B00001111,B00000010,B00000010,B11111110,B10000011,B01000010};
byte p[8]={B01000110,B00001010,B00010010,B00110010,B01101011,B11001010,B10000010,B10000010};
byte temp1[8]={0,0,0,0,0,0,0,0};
byte temp2[8]={0,0,0,0,0,0,0,0};
byte temp3[8]={0,0,0,0,0,0,0,0};
byte temp4[8]={0,0,0,0,0,0,0,0};
byte temp5[8]={0,0,0,0,0,0,0,0};
byte temp6[8]={0,0,0,0,0,0,0,0};
byte temp7[8]={0,0,0,0,0,0,0,0};
byte temp8[8]={0,0,0,0,0,0,0,0};//上面那排的暫存陣列
byte Temp1[8]={0,0,0,0,0,0,0,0};
byte Temp2[8]={0,0,0,0,0,0,0,0};
byte Temp3[8]={0,0,0,0,0,0,0,0};
byte Temp4[8]={0,0,0,0,0,0,0,0};
byte Temp5[8]={0,0,0,0,0,0,0,0};
byte Temp6[8]={0,0,0,0,0,0,0,0};
byte Temp7[8]={0,0,0,0,0,0,0,0};
byte Temp8[8]={0,0,0,0,0,0,0,0};

void setup() {
  for(int i=0;i<8;i++){
    lc1.shutdown(i,false);/* Set the brightness to a medium values */
    lc1.setIntensity(i,0);/* and clear the display */
    lc1.clearDisplay(i);
  }
  for(int i=0;i<8;i++){
    lc2.shutdown(i,false);/* Set the brightness to a medium values */
    lc2.setIntensity(i,0);/* and clear the display */
    lc2.clearDisplay(i);
  }
}
void loop() {
  for (int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      Temp1[7-t]=Temp1[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
    }
    temp1[0]=a[s];
    Temp1[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc2.setColumn(7,0,Temp1[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
    }
    temp1[0]=b[s];
    temp2[0]=a[s];
    Temp1[0]=j[s];
    Temp2[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
    }
    temp1[0]=c[s];
    temp2[0]=b[s];
    temp3[0]=a[s];
    Temp1[0]=k[s];
    Temp2[0]=j[s];
    Temp3[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      temp4[7-t]=temp4[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      Temp4[7-t]=Temp4[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc1.setColumn(4,7-t,temp4[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
      lc2.setColumn(4,7-t,Temp4[7-t]);
    }
    temp1[0]=d[s];
    temp2[0]=c[s];
    temp3[0]=b[s];
    temp4[0]=a[s];
    Temp1[0]=l[s];
    Temp2[0]=k[s];
    Temp3[0]=j[s];
    Temp4[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc1.setColumn(4,0,temp4[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    lc2.setColumn(4,0,Temp4[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      temp4[7-t]=temp4[6-t];
      temp5[7-t]=temp5[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      Temp4[7-t]=Temp4[6-t];
      Temp5[7-t]=Temp5[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc1.setColumn(4,7-t,temp4[7-t]);
      lc1.setColumn(3,7-t,temp5[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
      lc2.setColumn(4,7-t,Temp4[7-t]);
      lc2.setColumn(3,7-t,Temp5[7-t]);
    }
    temp1[0]=e[s];
    temp2[0]=d[s];
    temp3[0]=c[s];
    temp4[0]=b[s];
    temp5[0]=a[s];
    Temp1[0]=m[s];
    Temp2[0]=l[s];
    Temp3[0]=k[s];
    Temp4[0]=j[s];
    Temp5[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc1.setColumn(4,0,temp4[0]);
    lc1.setColumn(3,0,temp5[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    lc2.setColumn(4,0,Temp4[0]);
    lc2.setColumn(3,0,Temp5[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      temp4[7-t]=temp4[6-t];
      temp5[7-t]=temp5[6-t];
      temp6[7-t]=temp6[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      Temp4[7-t]=Temp4[6-t];
      Temp5[7-t]=Temp5[6-t];
      Temp6[7-t]=Temp6[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc1.setColumn(4,7-t,temp4[7-t]);
      lc1.setColumn(3,7-t,temp5[7-t]);
      lc1.setColumn(2,7-t,temp6[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
      lc2.setColumn(4,7-t,Temp4[7-t]);
      lc2.setColumn(3,7-t,Temp5[7-t]);
      lc2.setColumn(2,7-t,Temp6[7-t]);
    }
    temp1[0]=f[s];
    temp2[0]=e[s];
    temp3[0]=d[s];
    temp4[0]=c[s];
    temp5[0]=b[s];
    temp6[0]=a[s];
    Temp1[0]=n[s];
    Temp2[0]=m[s];
    Temp3[0]=l[s];
    Temp4[0]=k[s];
    Temp5[0]=j[s];
    Temp6[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc1.setColumn(4,0,temp4[0]);
    lc1.setColumn(3,0,temp5[0]);
    lc1.setColumn(2,0,temp6[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    lc2.setColumn(4,0,Temp4[0]);
    lc2.setColumn(3,0,Temp5[0]);
    lc2.setColumn(2,0,Temp6[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      temp4[7-t]=temp4[6-t];
      temp5[7-t]=temp5[6-t];
      temp6[7-t]=temp6[6-t];
      temp7[7-t]=temp7[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      Temp4[7-t]=Temp4[6-t];
      Temp5[7-t]=Temp5[6-t];
      Temp6[7-t]=Temp6[6-t];
      Temp7[7-t]=Temp7[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc1.setColumn(4,7-t,temp4[7-t]);
      lc1.setColumn(3,7-t,temp5[7-t]);
      lc1.setColumn(2,7-t,temp6[7-t]);
      lc1.setColumn(1,7-t,temp7[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
      lc2.setColumn(4,7-t,Temp4[7-t]);
      lc2.setColumn(3,7-t,Temp5[7-t]);
      lc2.setColumn(2,7-t,Temp6[7-t]);
      lc2.setColumn(1,7-t,Temp7[7-t]);
    }
    temp1[0]=g[s];
    temp2[0]=f[s];
    temp3[0]=e[s];
    temp4[0]=d[s];
    temp5[0]=c[s];
    temp6[0]=b[s];
    temp7[0]=a[s];
    Temp1[0]=o[s];
    Temp2[0]=n[s];
    Temp3[0]=m[s];
    Temp4[0]=l[s];
    Temp5[0]=k[s];
    Temp6[0]=j[s];
    Temp7[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc1.setColumn(4,0,temp4[0]);
    lc1.setColumn(3,0,temp5[0]);
    lc1.setColumn(2,0,temp6[0]);
    lc1.setColumn(1,0,temp7[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    lc2.setColumn(4,0,Temp4[0]);
    lc2.setColumn(3,0,Temp5[0]);
    lc2.setColumn(2,0,Temp6[0]);
    lc2.setColumn(1,0,Temp7[0]);
    delay(100);
  }
  for(int s=0;s<8;s++){
    for(int t=0;t<7;t++){
      temp1[7-t]=temp1[6-t];
      temp2[7-t]=temp2[6-t];
      temp3[7-t]=temp3[6-t];
      temp4[7-t]=temp4[6-t];
      temp5[7-t]=temp5[6-t];
      temp6[7-t]=temp6[6-t];
      temp7[7-t]=temp7[6-t];
      temp8[7-t]=temp8[6-t];
      Temp1[7-t]=Temp1[6-t];
      Temp2[7-t]=Temp2[6-t];
      Temp3[7-t]=Temp3[6-t];
      Temp4[7-t]=Temp4[6-t];
      Temp5[7-t]=Temp5[6-t];
      Temp6[7-t]=Temp6[6-t];
      Temp7[7-t]=Temp7[6-t];
      Temp8[7-t]=Temp8[6-t];
      lc1.setColumn(7,7-t,temp1[7-t]);
      lc1.setColumn(6,7-t,temp2[7-t]);
      lc1.setColumn(5,7-t,temp3[7-t]);
      lc1.setColumn(4,7-t,temp4[7-t]);
      lc1.setColumn(3,7-t,temp5[7-t]);
      lc1.setColumn(2,7-t,temp6[7-t]);
      lc1.setColumn(1,7-t,temp7[7-t]);
      lc1.setColumn(0,7-t,temp8[7-t]);
      lc2.setColumn(7,7-t,Temp1[7-t]);
      lc2.setColumn(6,7-t,Temp2[7-t]);
      lc2.setColumn(5,7-t,Temp3[7-t]);
      lc2.setColumn(4,7-t,Temp4[7-t]);
      lc2.setColumn(3,7-t,Temp5[7-t]);
      lc2.setColumn(2,7-t,Temp6[7-t]);
      lc2.setColumn(1,7-t,Temp7[7-t]);
      lc2.setColumn(0,7-t,Temp8[7-t]);
    }
    temp1[0]=h[s];
    temp2[0]=g[s];
    temp3[0]=f[s];
    temp4[0]=e[s];
    temp5[0]=d[s];
    temp6[0]=c[s];
    temp7[0]=b[s];
    temp8[0]=a[s];
    Temp1[0]=p[s];
    Temp2[0]=o[s];
    Temp3[0]=n[s];
    Temp4[0]=m[s];
    Temp5[0]=l[s];
    Temp6[0]=k[s];
    Temp7[0]=j[s];
    Temp8[0]=i[s];
    lc1.setColumn(7,0,temp1[0]);
    lc1.setColumn(6,0,temp2[0]);
    lc1.setColumn(5,0,temp3[0]);
    lc1.setColumn(4,0,temp4[0]);
    lc1.setColumn(3,0,temp5[0]);
    lc1.setColumn(2,0,temp6[0]);
    lc1.setColumn(1,0,temp7[0]);
    lc1.setColumn(0,0,temp8[0]);
    lc2.setColumn(7,0,Temp1[0]);
    lc2.setColumn(6,0,Temp2[0]);
    lc2.setColumn(5,0,Temp3[0]);
    lc2.setColumn(4,0,Temp4[0]);
    lc2.setColumn(3,0,Temp5[0]);
    lc2.setColumn(2,0,Temp6[0]);
    lc2.setColumn(1,0,Temp7[0]);
    lc2.setColumn(0,0,Temp8[0]);
    delay(100);
  }
 for (int i=0;i<8;i++){
    temp1[i]=0;
    temp2[i]=0;
    temp3[i]=0;
    temp4[i]=0;
    temp5[i]=0;
    temp6[i]=0;
    temp7[i]=0;
    temp8[i]=0;
    Temp1[i]=0;
    Temp2[i]=0;
    Temp3[i]=0;
    Temp4[i]=0;
    Temp5[i]=0;
    Temp6[i]=0;
    Temp7[i]=0;
    Temp8[i]=0;
  }
  for (int s=0;s<8;s++){
    lc1.setColumn(7,7-s,h[s]);
    lc2.setColumn(7,7-s,p[s]);
    lc1.setColumn(6,7-s,g[s]);
    lc2.setColumn(6,7-s,o[s]);
    lc1.setColumn(5,7-s,f[s]);
    lc2.setColumn(5,7-s,n[s]);
    lc1.setColumn(4,7-s,e[s]);
    lc2.setColumn(4,7-s,m[s]);
    lc1.setColumn(3,7-s,d[s]);
    lc2.setColumn(3,7-s,l[s]);
    lc1.setColumn(2,7-s,c[s]);
    lc2.setColumn(2,7-s,k[s]);
    lc1.setColumn(1,7-s,b[s]);
    lc2.setColumn(1,7-s,j[s]);
    lc1.setColumn(0,7-s,a[s]);
    lc2.setColumn(0,7-s,i[s]);
  }
  delay(200);  
  for (int i=0;i<8;i++){
    for (int j=0;j<8;j++){
      lc1.setColumn(i,7-j,0);
      lc2.setColumn(i,7-j,0);
    }  
  }
}
